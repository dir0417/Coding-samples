/************************************************************************************************************Project: R2D2Question number: Question_0006Question in Text:  An assessment of severity of illness for Hispanic vs non-Hispanics, defined as need an ordinal outcome of ICU admissionDatabase: SQL ServerAuthor name: Diana IrAuthor GitHub username: dir0417Author email: Diana.ir@ucdenver.edusVersion : 1.0Invested work hours at initial git commit: 15Initial git commit date: 06/11/2020Last modified date: 06/11/2020Assumptions:--------------- 	ADT (Admissions-Discharge-Transfer) info is populated in the visit_detail table 	(ie each row in the visit detail table is a transfer during the patient's hospital stay		with visit_occurrence_id as the parent id)Instructions: -------------Section 1: Use local processes to 	1) Initialize variables: Please change the site number of your site	2) Identify COVID positive patients 	3) Identify local ICU departmentsSection 2: COVID hospitalizations per OHDSI definition	1)	have a hospitalisation (index event) after December 1st 2019,	2)	with a record of COVID-19 in the 3 weeks prior and up to end of hospitalisation,	3)	be aged 18 years or greater at time of the index visit,	4)	have no COVID-19 associated hospitalisation in the six months prior to the index eventSection 3: ICU transfers	1) Identifies patients who were admitted to ICU at any point during hospitalizationSection 4: Results*************************************************************************************************************//*********************** do not update *****************/DECLARE version NUMERIC DEFAULT 1.0;DECLARE queryexecutiondate DATETIME DEFAULT CURRENT_DATETIME();/********************************************************//************************************************************************************************************* Section 1:	Site specific customization required (Please substitute code to identify COVID-19 patients at your site)**************************************************************************************************************/	--Initialize variablesDECLARE SITE STRING DEFAULT 'Site07';	-- COVID positive patientsdrop table if exists temp_covid_scratch.u68u4v2ncovid_pos;CREATE TABLE temp_covid_scratch.u68u4v2ncovid_pos ASSELECT subject_id person_id,	cohort_start_date,	cohort_end_dateFROM achilles_results.cohortWHERE cohort_definition_id = 15056;---Site10 COVID-19 CONFIRMED POSITIVE REGISTRY	--ICU departments drop table if exists temp_covid_scratch.u68u4v2nicu_departments;CREATE TABLE temp_covid_scratch.u68u4v2nicu_departments ASSELECT cs.care_site_id,	cs.care_site_nameFROM omop_covid19.care_site csWHERE cs.care_site_name LIKE '%ICU%';/*************************************************************************************************************  Section 2:	COVID +ve with hospital admission (OHDSI definition)Target Cohort #1: Patient cohorts in the hospitalised with COVID-19 cohort will:1)	have a hospitalisation (index event) after December 1st 2019,2)	with a record of COVID-19 in the 3 weeks prior and up to end of hospitalisation,3)	be aged 18 years or greate at time of the index visit,4)	have no COVID-19 associated hospitalisation in the six months prior to the index event*************************************************************************************************************/-- 1, 2 and 3drop table if exists temp_covid_scratch.u68u4v2ncovid_hsp;CREATE TABLE temp_covid_scratch.u68u4v2ncovid_hsp   ASSELECT a.*,	d.death_datetime,	CASE 		WHEN d.death_datetime BETWEEN a.visit_start_datetime				AND a.visit_end_datetime			OR discharge_to_concept_id = 44814686 -- Deceased			THEN 1		ELSE 0		END AS hospital_mortality,	row_number() OVER (		PARTITION BY a.person_id ORDER BY days_bet_covid_tst_hosp ASC		) rownumFROM(	SELECT DISTINCT vo.visit_occurrence_id,	vo.person_id,	vo.visit_concept_id,	coalesce(cast(vo.visit_start_datetime as DATETIME), cast(visit_start_date as datetime)) visit_start_datetime,	coalesce(cast(vo.visit_end_datetime as DATETIME), cast(vo.visit_end_date as datetime)) visit_end_datetime,	vo.discharge_to_concept_id,	vo.discharge_to_source_value, 	ROUND(DATE_DIFF(		IF(SAFE_CAST(CURRENT_DATE()  AS DATE) IS NULL,PARSE_DATE('%Y%m%d', cast(CURRENT_DATE()  AS STRING)),SAFE_CAST(CURRENT_DATE()  AS DATE)), 		IF(SAFE_CAST(p.birth_datetime  AS DATE) IS NULL,PARSE_DATE('%Y%m%d', cast(p.birth_datetime  AS STRING)),SAFE_CAST(p.birth_datetime  AS DATE)), 		DAY)/365.25, 0) current_age,  	cp.cohort_start_date, 	DATE_DIFF(		IF(SAFE_CAST(coalesce(cast(vo.visit_start_datetime as DATETIME), cast(visit_start_date as datetime))  AS DATE) IS NULL,PARSE_DATE('%Y%m%d', cast(coalesce(cast(vo.visit_start_datetime as DATETIME), cast(visit_start_date as datetime)) AS STRING)),SAFE_CAST(coalesce(cast(vo.visit_start_datetime as DATETIME), cast(visit_start_date as datetime)) AS DATE)), 		IF(SAFE_CAST(cp.cohort_start_date  AS DATE) IS NULL,PARSE_DATE('%Y%m%d', cast(cp.cohort_start_date  AS STRING)),SAFE_CAST(cp.cohort_start_date  AS DATE)), 		DAY) days_bet_covid_tst_hosp	FROM temp_covid_scratch.u68u4v2ncovid_pos cp	JOIN omop_covid19.visit_occurrence vo		ON cp.person_id = vo.person_id	JOIN omop_covid19.person p		ON p.person_id = vo.person_id	WHERE vo.visit_start_datetime >= '2019-12-01'	AND vo.visit_concept_id IN (		9201,		262		) -- IP, EI visits 	and DATE_DIFF(		IF(SAFE_CAST(CURRENT_DATE()  AS DATE) IS NULL,PARSE_DATE('%Y%m%d', cast(CURRENT_DATE()  AS STRING)),SAFE_CAST(CURRENT_DATE()  AS DATE)), 		IF(SAFE_CAST(p.birth_datetime  AS DATE) IS NULL,PARSE_DATE('%Y%m%d', cast(p.birth_datetime  AS STRING)),SAFE_CAST(p.birth_datetime  AS DATE)), 		DAY)/365.25 >= 18.0	--CORDS doesn't have birthdate info	and (			DATE_DIFF(				SAFE_CAST(coalesce(cast(vo.visit_start_datetime as DATETIME), cast(visit_start_date as datetime)) AS DATE),				SAFE_CAST(cp.cohort_start_date  AS DATE),        DAY) between 0 and  21  -- +ve COVID status within 21 days before admission      OR		    cp.cohort_start_date between           cast(coalesce(cast(vo.visit_start_datetime as DATETIME), cast(visit_start_date as datetime)) as date) and cast(coalesce(cast(vo.visit_end_datetime as DATETIME), cast(visit_end_date as datetime)) as date)		)) a LEFT JOIN (	SELECT person_id,		min(cast(death_date as datetime)) death_datetime	FROM omop_covid19.death	GROUP BY 1	) d	ON d.person_id = a.person_id;-- 4)	have no COVID-19 associated hospitalisation in the six months prior to the index eventDELETEFROM temp_covid_scratch.u68u4v2ncovid_hspWHERE visit_occurrence_id IN (		SELECT d.visit_occurrence_id		FROM temp_covid_scratch.u68u4v2ncovid_hsp o		LEFT JOIN temp_covid_scratch.u68u4v2ncovid_hsp d			ON o.person_id = d.person_id		WHERE o.visit_occurrence_id != d.visit_occurrence_id			AND datetime_diff(d.visit_start_datetime, o.visit_start_datetime, month) <= 6			AND d.visit_start_datetime > o.visit_start_datetime			AND o.rownum = 1		);--5)   Length of stay should be atleast 4 hrsdeletefrom temp_covid_scratch.u68u4v2ncovid_hsp hspwhere datetime_diff(visit_end_datetime, visit_start_datetime, hour) <= 4;/*************************************************************************************************************  Section 3Query: ICU transfers of hospitalized COVID patients *************************************************************************************************************/--ICU admissions (COVID patients transferred to ICU at any point during hospital stay) drop table if exists temp_covid_scratch.u68u4v2npatients;CREATE TABLE temp_covid_scratch.u68u4v2npatients ASSELECTdistinct hsp.visit_occurrence_id, hsp.person_id, hsp.visit_concept_id, hsp.visit_start_datetime, hsp.visit_end_datetime, case when icu_tran.visit_occurrence_id is not null then 1 else 0 end as outcome, p.gender_concept_id, gender.concept_name gender, p.race_concept_id, race.concept_name race, p.ethnicity_concept_id, ethnicity.concept_name ethnicity, DATE_DIFF(IF(SAFE_CAST(CURRENT_DATE()  AS DATE) IS NULL,PARSE_DATE('%Y%m%d', cast(CURRENT_DATE()  AS STRING)),SAFE_CAST(CURRENT_DATE()  AS DATE)), IF(SAFE_CAST(p.birth_datetime  AS DATE) IS NULL,PARSE_DATE('%Y%m%d', cast(p.birth_datetime  AS STRING)),SAFE_CAST(p.birth_datetime  AS DATE)), DAY)/365 current_ageFROMtemp_covid_scratch.u68u4v2ncovid_hsp hspleft join (	select distinct vd.visit_occurrence_id, vd.person_id	, vd.visit_detail_start_datetime icu_start_datetime, vd.visit_detail_end_datetime icu_end_datetime	, icu.care_site_name icu_department	from temp_covid_scratch.u68u4v2ncovid_hsp cp 	join omop_covid19.visit_detail vd on  cp.visit_occurrence_id = vd.visit_occurrence_id --visit detail  holds the Admissions, discharges and transfers	join temp_covid_scratch.u68u4v2nicu_departments icu on icu.care_site_id = vd.care_site_id	) icu_tran on icu_tran.visit_occurrence_id = hsp.visit_occurrence_idleft join omop_covid19.person p on p.person_id = hsp.person_idleft join omop_covid19.concept gender on gender.concept_id = p.gender_concept_idleft join omop_covid19.concept race on race.concept_id = p.race_concept_idleft join omop_covid19.concept ethnicity on ethnicity.concept_id = p.ethnicity_concept_id;/**************************************************************************************************Section 4:			Results**************************************************************************************************/--Section A: Results setup	drop table if exists temp_covid_scratch.u68u4v2noutcome;	CREATE TABLE temp_covid_scratch.u68u4v2noutcome ASSELECT 0 id, 'not_transferred_to_ICU' outcome union distinct select 1, 'transferred_to_ICU';	-- Create full set of permissible concepts  (gender, race, ethnicity, age-range)	drop table if exists temp_covid_scratch.u68u4v2ngender;	CREATE TABLE temp_covid_scratch.u68u4v2ngender  ASSELECTconcept_id, concept_name FROMomop_covid19.concept 	where lower(domain_id) = 'gender' and standard_concept = 'S' 	union distinct select 0, 'Unknown';	drop table if exists temp_covid_scratch.u68u4v2nrace;	CREATE TABLE temp_covid_scratch.u68u4v2nrace  ASSELECTconcept_id, concept_name FROMomop_covid19.concept 	where lower(domain_id) = 'race' and standard_concept = 'S' 	and concept_code  in ('1','2','3','4','5')	union distinct select 0, 'Unknown';	drop table if exists temp_covid_scratch.u68u4v2nethnicity;	CREATE TABLE temp_covid_scratch.u68u4v2nethnicity  ASSELECTconcept_id, concept_name FROMomop_covid19.concept 	where lower(domain_id) = 'ethnicity' and standard_concept = 'S' 	union distinct select 0, 'Unknown';	drop table if exists temp_covid_scratch.u68u4v2nage_range;  	CREATE TABLE temp_covid_scratch.u68u4v2nage_rangeASSELECT1 age_id, '0 - 17' age union distinct select 2, '18 - 30' union distinct select 3, '31 - 40' union distinct select 4, '41 - 50' union distinct select 5, '51 - 60' union distinct select 6, '61 - 70' union distinct select 7, '71 - 80' union distinct select 8, '81 - ' union distinct select 9, 'Unknown';--Section B: Results	--GenderSELECT 'Site007' institution,	'Gender' variable,	m.concept_name value,	m.outcome outcome,	count(DISTINCT person_id) patientcount,	version query_version,	queryexecutiondate query_execution_dateFROM (	SELECT *	FROM temp_covid_scratch.u68u4v2ngender	CROSS JOIN temp_covid_scratch.u68u4v2noutcome	) mLEFT JOIN temp_covid_scratch.u68u4v2npatients p	ON m.concept_id = p.gender_concept_id		AND m.id = p.outcomeGROUP BY m.concept_name,	m.outcomeUNION DISTINCTSELECT 'Site007' institution,	'Race' variable,	m.concept_name,	m.outcome,	count(DISTINCT p.person_id) patient_count,	version query_version,	queryexecutiondate query_execution_dateFROM (	SELECT *	FROM temp_covid_scratch.u68u4v2nrace	CROSS JOIN temp_covid_scratch.u68u4v2noutcome	) mLEFT JOIN temp_covid_scratch.u68u4v2npatients p	ON m.concept_id = p.race_concept_id		AND m.id = p.outcomeGROUP BY m.concept_name,	m.outcomeUNION DISTINCTSELECT 'Site007' institution,	'Ethnicity' variable,	m.concept_name,	m.outcome,	count(DISTINCT p.person_id) patient_count,	version query_version,	queryexecutiondate query_execution_dateFROM (	SELECT *	FROM temp_covid_scratch.u68u4v2nethnicity	CROSS JOIN temp_covid_scratch.u68u4v2noutcome	) mLEFT JOIN temp_covid_scratch.u68u4v2npatients p	ON m.concept_id = p.ethnicity_concept_id		AND m.id = p.outcomeGROUP BY m.concept_name, m.outcomeUNION	DISTINCTSELECT 	'Site007' institution,	'AgeRange' variable	, case 		when current_age < 18 then '0 - 17'		when current_age >= 18 and current_age < 31 then '18 - 30'		when current_age >= 31 and current_age < 41 then '31 - 40'		when current_age >= 41 and current_age < 51 then '41 - 50'		when current_age >= 51 and current_age < 61 then '51 - 60'		when current_age >= 61 and current_age < 71 then '61 - 70'		when current_age >= 71 and current_age < 81 then '71 - 80'		when current_age >= 81 then '81 - '		ELSE 'Unknown'	end age_range, 	m.outcome, 	count(distinct p.person_id) patient_count, 	version query_version, 	queryexecutiondate query_execution_dateFROM (	SELECT *	FROM temp_covid_scratch.u68u4v2nage_range	CROSS JOIN temp_covid_scratch.u68u4v2noutcome	) mLEFT JOIN temp_covid_scratch.u68u4v2npatients p	ON m.id = p.outcomeGROUP BY 3,	4;